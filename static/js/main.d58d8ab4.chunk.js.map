{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReverse","setReverse","NONE","sortType","setSort","goods","sort","goodA","goodB","ALPHABET","localeCompare","LENGTH","length","reverse","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAASH,EAASM,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KAWMC,EAAK,UAAOR,GAmBlB,OAjBAQ,EAAMC,MAAK,SAACC,EAAOC,GACjB,OAAQL,GACN,KAAKP,EAASa,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKZ,EAASe,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITZ,GACFK,EAAMQ,UAIN,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAC9B,CACE,WAAYb,IAAaP,EAASa,WAEtCQ,QA/Be,kBAAMb,EAAQR,EAASa,WAyBxC,iCAWA,wBACEM,KAAK,SACLD,UAAWE,IAAW,SAAU,aAC9B,CACE,WAAYb,IAAaP,EAASe,SAEtCM,QAzCiB,kBAAMb,EAAQR,EAASe,SAmC1C,4BAWA,wBACEI,KAAK,SACLE,QAvDc,kBAAMhB,GAAYD,IAwDhCc,UAAWE,IAAW,SAAU,aAC9B,CACE,YAAahB,IALnB,sBAUEA,GAAaG,IAAaP,EAASM,OAEnC,wBACEa,KAAK,SACLE,QAlEU,WAClBhB,GAAW,GACXG,EAAQR,EAASM,OAiETY,UAAWE,IAAW,SAAU,YAC9B,CACE,YAAahB,GAAaG,IAAaP,EAASM,OALtD,sBAcJ,6BACE,6BACGG,EAAMa,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cC3GrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d58d8ab4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [isReverse, setReverse] = useState(false);\n  const [sortType, setSort] = useState(SortType.NONE);\n\n  const handleReverse = () => setReverse(!isReverse);\n  const handleReset = () => {\n    setReverse(false);\n    setSort(SortType.NONE);\n  };\n\n  const handleSortAlph = () => setSort(SortType.ALPHABET);\n  const handleSortLength = () => setSort(SortType.LENGTH);\n\n  const goods = [...goodsFromServer];\n\n  goods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goodA.localeCompare(goodB);\n\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReverse) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n          onClick={handleSortAlph}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n          onClick={handleSortLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleReverse}\n          className={classNames('button', 'is-warning',\n            {\n              'is-light': !isReverse,\n            })}\n        >\n          Reverse\n        </button>\n        {(isReverse || sortType !== SortType.NONE)\n        && (\n          <button\n            type=\"button\"\n            onClick={handleReset}\n            className={classNames('button', 'is-danger',\n              {\n                'is-light': !isReverse && sortType === SortType.NONE,\n              })}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}